apiVersion: v1
kind: Pod
metadata:
  name: kube-reverseproxy
  namespace: default # must be the same as the container env var K8S_REVERSEPROXY_POD_NAME
  annotations:
    kubernetesReverseproxy: "{\"hosts\": [{\"host\": \"www.example.com\", \"ssl\": 1, \"sslCrt\": \"example.crt\", \"sslKey\": \"example.key\", \"redirectToHTTPS\":\"80\", \"addWWW\": 1},{\"host\": \"test.com\", \"ssl\": 1, \"sslCrt\": \"test.crt\", \"sslKey\": \"test.key\", \"redirectToHTTPS\": \"80\", \"stripWWW\": 1}]}"
spec:
  containers:
  - name: kube-reverseproxy
    image: osixia/kubernetes-reverseproxy
    volumeMounts:
      - name: etcd-certs
        mountPath: /container/service/etcd/assets/certs
      - name: kube-reverseproxy-certs
        mountPath: /container/service/nginx/assets/certs
    ports:
      - containerPort: 80
        hostPort: 80
        protocol: TCP
      - containerPort: 443
        hostPort: 443
        protocol: TCP
    env:
      - name: K8S_REVERSEPROXY_POD_NAMESPACE
        value: default # must be the same as the pod namespace defined in this file
      - name: K8S_REVERSEPROXY_CONFD_ETCD_NODES
        value: "https://10.100.0.1:2379"
      - name: K8S_REVERSEPROXY_CONFD_INTERVAL
        value: "10"
      - name: K8S_REVERSEPROXY_CONFD_CLIENT_CAKEYS_FILENAME
        value: "ca.crt"
      - name: K8S_REVERSEPROXY_CONFD_CLIENT_CERT_FILENAME
        value: "cert.crt"
      - name: K8S_REVERSEPROXY_CONFD_CLIENT_KEY_FILENAME
        value: "cert.key"
      - name: K8S_REVERSEPROXY_CONFD_LOG_LEVEL
        value: "error"
  volumes:
    - name: etcd-certs
      hostPath:
        path: /home/user/ssl/etcd/
    - name: kube-reverseproxy-certs
      hostPath:
        path: /home/user/ssl/website/
